#!/usr/bin/env bash

set -eux

fdbwrite="$<TARGET_FILE:fdb-write>"

srcdir=@CMAKE_CURRENT_SOURCE_DIR@
bindir=@CMAKE_CURRENT_BINARY_DIR@

### cleanup and prepare test

cd $bindir
rm -rf $bindir/FDB-239

cp -r $srcdir/FDB-239 $bindir/FDB-239
cd $bindir/FDB-239

mkdir localroot

export FDB5_CONFIG_FILE=local.yaml

$fdbwrite in.grib

# cat > list <<EOF
# {class=rd,expver=xxxx,stream=oper,date=20201102,time=0000,domain=g}{type=fc,levtype=sfc}{step=9,param=166},length=1476
# {class=rd,expver=xxxx,stream=oper,date=20201102,time=0000,domain=g}{type=fc,levtype=sfc}{step=6,param=166},length=1476
# EOF

# cat > content.6 <<EOF
# g           sfc         20201102    0000        6           166.128     rd          fc          oper        xxxx
# EOF

# cat > content.12 <<EOF
# g           sfc         20201102    0000        12          166.128     rd          fc          oper        xxxx
# EOF

# $fdblist --all --minimum-keys="" --porcelain | tee out
# cmp out list

### tests with current version

../FDB-239.x mars.req out.grib
# read contents
# $fdbread checkV2.req checkV2.grib
# $gribls -m checkV2.grib | tee out
# grep xxxx out | sed 's/ *$//' > checkv2
# cmp checkv2 content.6

# # write new field with current version (will have toc with mixed versions)
# $fdbwrite 12.grib
# $fdbread checkV3.req checkV3.grib
# $gribls -m checkV3.grib | tee out
# grep xxxx out | sed 's/ *$//' > checkv3
# cmp checkv3 content.12

# # check still able to read previous v2 field
# $fdbread checkV2.req checkV2.again.grib
# $gribls -m checkV2.again.grib | tee out
# grep xxxx out | sed 's/ *$//' > checkv2.again
# cmp checkv2.again content.6

# cmp checkV2.grib checkV2.again.grib

